security:
    enable_authenticator_manager: true
    password_hashers:
        Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface: 'auto'
    providers:
        app_user_provider:
            entity:
                class: App\Entity\User
                property: email
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false

        # Ajout du firewall pour le login JWT
        login:
            pattern: ^/api/login
            stateless: true
            json_login:
                check_path: api_login_check
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

        # Ajout du firewall pour l'API
        api:
            pattern: ^/api
            stateless: true
            provider: app_user_provider
            jwt: ~
            
        main:
            lazy: true
            provider: app_user_provider
            custom_authenticator: App\Security\MonPetitLivreAuthenticator
            logout:
                path: app_logout

    access_control:
        # Route de login accessible sans token
        - { path: ^/api/login, roles: PUBLIC_ACCESS }
        # Le reste de l'API n√©cessite un token
        - { path: ^/api, roles: IS_AUTHENTICATED_FULLY }

when@test:
    security:
        password_hashers:
            Symfony\Component\Security\Core\User\PasswordAuthenticatedUserInterface:
                algorithm: auto
                cost: 4
                time_cost: 3
                memory_cost: 10